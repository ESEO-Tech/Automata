namespace("automata.games.robot",function(a){"use strict";a.World=automata.model.World.create({timeStepMax:100,sensors:[{name:"WL",desc:"Wall on the Left"},{name:"WR",desc:"Wall on the right"},{name:"WA",desc:"Wall Ahead"},{name:"EOR",desc:"End Of Rotation"}],actuators:[{name:"LF",desc:"Left wheel Forward"},{name:"LB",desc:"Left wheel Backward"},{name:"RF",desc:"Right wheel Forward"},{name:"RB",desc:"Right wheel Backward"}],width:100,height:100,walls:[],robotRadius:10,sensorFactor:1.4,stepDistance:1,startX:0,startY:0,startAngle:0,goalX:0,goalY:0,goalRadius:10,init:function(){return this.sensorRadius=this.robotRadius/4,this.sensorPoints=[{x:-this.robotRadius,y:-this.robotRadius*this.sensorFactor},{x:-this.robotRadius,y:this.robotRadius*this.sensorFactor},{x:this.robotRadius*this.sensorFactor,y:0}],automata.model.World.init.call(this)},onReset:function(){this.robotMatrix=(new Snap.Matrix).translate(this.startX,this.startY).rotate(this.startAngle)},onStep:function(){function a(a,b,c,d,e,f){var g=c*c,h=d-a,i=h*h;if(i>g)return!1;var j=Math.sqrt(g-i),k=b+j,l=b-j;return k>=e&&f>=k||l>=e&&f>=l}this.sensorValues=["0","0","0","0"];var b=0;"1"===this.actuatorValues[0]&&(b+=1),"1"===this.actuatorValues[1]&&(b-=1);var c=0;"1"===this.actuatorValues[2]&&(c+=1),"1"===this.actuatorValues[3]&&(c-=1);var d=this.robotMatrix.clone();b===c?d.translate(b*this.stepDistance,0):b===-c?d.rotate(b*this.stepDistance*180/this.robotRadius/Math.PI):0===b?d.rotate(-c*this.stepDistance*90/this.robotRadius/Math.PI,this.sensorPoints[0].x,this.sensorPoints[0].y):0===c&&d.rotate(b*this.stepDistance*90/this.robotRadius/Math.PI,this.sensorPoints[1].x,this.sensorPoints[1].y);for(var e=a(d.e,d.f,this.robotRadius,0,0,this.height)||a(d.e,d.f,this.robotRadius,this.width,0,this.height)||a(d.f,d.e,this.robotRadius,0,0,this.width)||a(d.f,d.e,this.robotRadius,this.height,0,this.width),f=0;f<this.walls.length;f++){var g=this.walls[f];if(a(d.e,d.f,this.robotRadius,g[0],g[1],g[3])||a(d.e,d.f,this.robotRadius,g[2],g[1],g[3])||a(d.f,d.e,this.robotRadius,g[1],g[0],g[2])||a(d.f,d.e,this.robotRadius,g[3],g[0],g[2])){e=!0;break}}e||(b!==c&&(0===d.a||d.a*this.robotMatrix.a<0||0===d.b||d.b*this.robotMatrix.b<0)&&(d.a>.99&&(d.a=1,d.b=0),d.a<-.99&&(d.a=-1,d.b=0),d.b>.99&&(d.a=0,d.b=1),d.b<-.99&&(d.a=0,d.b=-1),this.sensorValues[3]="1"),this.robotMatrix=d);for(var h=0;h<this.sensorPoints.length;h++)for(var i=this.sensorPoints[h],j=this.robotMatrix.x(i.x,i.y),k=this.robotMatrix.y(i.x,i.y),l=0;l<this.walls.length;l++){var m=this.walls[l];if(a(j,k,this.sensorRadius,m[0],m[1],m[3])||a(j,k,this.sensorRadius,m[2],m[1],m[3])||a(k,j,this.sensorRadius,m[1],m[0],m[2])||a(k,j,this.sensorRadius,m[3],m[0],m[2])){this.sensorValues[h]="1";break}}},getStatus:function(){var a=this.goalX-this.robotMatrix.e,b=this.goalY-this.robotMatrix.f;return a*a+b*b<=this.goalRadius*this.goalRadius?{done:!0,status:"success"}:{done:!1}}})}),namespace("automata.games.robot",function(a){"use strict";a.WorldView=automata.model.Object.create({init:function(a,b){automata.model.Object.init.call(this),this.world=a,this.paper=Snap(),b.append(this.paper.node),this.paper.attr({viewBox:"0 0 "+a.width+" "+a.height,preserveAspectRatio:"xMidYMid meet"}),this.paper.node.setAttribute("preserveAspectRatio","xMidYMid meet"),this.paper.circle(a.goalX,a.goalY,a.goalRadius).attr({fill:"orange"});for(var c=0;c<a.walls.length;c++){var d=a.walls[c];this.paper.rect(d[0],d[1],d[2]-d[0],d[3]-d[1]).attr({fill:"black",stroke:"none"})}this.sensorViews=a.sensorPoints.map(function(b){return this.paper.circle(b.x,b.y,a.sensorRadius)},this);var e=a.robotRadius;return this.robotView=this.paper.g(this.paper.circle(0,0,a.robotRadius).attr({fill:"rgb(38, 67, 112)"}),this.paper.circle(.25*a.robotRadius,0,.75*a.robotRadius).attr({fill:"rgb(51, 91, 149)"}),this.paper.path("m "+e/2+","+-e/2+" c "+e/4+",0 "+3*e/8+","+e/4+" "+3*e/8+","+e/2+" 0,"+e/4+" "+-e/8+","+e/2+" "+-3*e/8+","+e/2+" "+-e/4+",0 0,"+-e/4+" 0,"+-e/2+" 0,"+-e/4+" "+-e/4+","+-e/2+" 0,"+-e/2+" z").attr({fill:"rgb(173, 194, 227)"}),this.sensorViews[0],this.sensorViews[1],this.sensorViews[2]).attr({"class":"automata-robot"}),this.update(),a.addListener("changed",this.update,this),this},update:function(){for(var a=0;a<this.sensorViews.length;a++)this.sensorViews[a].attr({"class":"1"===this.world.sensorValues[a]?"active":"inactive"});this.robotView.transform(this.world.robotMatrix)}})}),namespace("automata.games.robot",function(a){"use strict";a.Cornered={key:"automata.games.robot.Cornered",view:a.WorldView,world:a.World.create({width:600,height:400,walls:[[0,0,600,10],[0,390,600,400],[0,0,10,400],[590,0,600,400]],startX:30,startY:30,goalX:570,goalY:370,goalRadius:15})}});